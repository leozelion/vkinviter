// ==UserScript==
// @name         VK inviter
// @namespace    http://tampermonkey.net/
// @version      1.5
// @description  Let's spam! üòÜ
// @author       LZ (leozelion)
// @match        https://vk.com/friends?act=invite&group_id=*
// @run-at       document-end
// @icon         https://www.google.com/s2/favicons?sz=64&domain=vk.com
// @source       https://github.com/leozelion/vkinviter
// @updateURL    https://github.com/leozelion/vkinviter/raw/main/vk-inviter-button.js
// @downloadURL  https://github.com/leozelion/vkinviter/raw/main/vk-inviter-button.js
// @supportURL   https://github.com/leozelion/vkinviter/issues
// @grant window.close
// @grant window.focus
// @grant window.onurlchange
// ==/UserScript==

var vkl = document.createElement('button'),
	stat = document.createElement('pre'),
	isOn = 0, hbody = 0, mode = 0, timeout = 0,
	selector = '',
	spamObj = {
		i: 0,
		invites: 0, // –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
		count: 0, // –Ω–∞–π–¥–µ–Ω–æ
		rows: [],
		text: '',
		parent: null
	};
function changeMode(e, m) {
	e && Array.from(document.getElementById('spam-mode').children).forEach(function (radio) {
		if (radio == e) {
			radio.classList.add("on");
			radio.setAttribute("aria-checked", "true");
		} else {
			radio.classList.remove("on");
			radio.setAttribute("aria-checked", "false");
		}
	});
	mode = m; console.log('Mode changed to: ' + m);
	if (!mode) { // –≤—ã—Å–ª–∞—Ç—å
		selector = ".friends_controls > .FlatButton--primary:not(.FlatButton--disabled):not(.FlatButton--locked)";
		stat.innerHTML = "–í—ã—Å–ª–∞–Ω–æ: 0\t–ù–∞–π–¥–µ–Ω–æ: 0";
		spamObj.text = "–í—ã—Å–ª–∞—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ";
	} else { // –æ—Ç–º–µ–Ω–∏—Ç—å
		selector = ".friends_controls > .FlatButton--secondary:not(.FlatButton--disabled)";
		stat.innerHTML = "–û—Ç–º–µ–Ω–µ–Ω–æ: 0\t–ù–∞–π–¥–µ–Ω–æ: 0";
		spamObj.text = "–û—Ç–º–µ–Ω–∏—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ";
	}
	spamObj.i = 0;
	spamObj.count = 0;
	spamObj.invites = 0;
}
function changeTimeout(t) {
	timeout = t;
	console.log('Timeout changed to: ' + t);
}

spamObj.click = function () {
	if (!isOn) {
		return;
	}
	let t = timeout;
	console.log('start click(), length: ' + spamObj.rows.length +
		', i: ' + spamObj.i);
	// –µ—Å–ª–∏ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –∫–∞–ø—á–∞, —Ç–æ –∫–Ω–æ–ø–∫—É –Ω–µ –Ω–∞–∂–∏–º–∞–µ–º, –Ω–æ —Ñ—É–Ω–∫—Ü–∏—è —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è
	if (document.getElementsByClassName("captcha").length === 0) {
		// –µ—Å–ª–∏ –ª–∏–º–∏—Ç –∏—Å—á–µ—Ä–ø–∞–Ω, –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ –ø—Ä–æ—à–ª–æ–π –∫–Ω–æ–ø–∫–∏ –ø–æ—è–≤–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ
		if (spamObj.parent && spamObj.parent.innerText.includes('–õ–∏–º–∏—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π –∏—Å—á–µ—Ä–ø–∞–Ω')) {
			console.log('Limit reached. Stop.');
			vkl.onclick();
			return;
		}
		// –ø—Ä–æ–≤–µ—Ä—è–µ–º offsetParent –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –Ω–∞—à–ª–∞—Å—å —Å–∫—Ä–∏–ø—Ç–æ–º, –Ω–æ –ø–æ —Ñ–∞–∫—Ç—É –µ—ë —É–∂–µ –Ω–µ—Ç
		if (spamObj.rows[spamObj.i] && spamObj.rows[spamObj.i].offsetParent) {
			let a = spamObj.rows[spamObj.i];
			spamObj.parent = a.offsetParent;
			// –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç —É–∂–µ –Ω–∞–∂–∏–º–∞–ª –∫–Ω–æ–ø–∫—É, –∑–Ω–∞—á–∏—Ç –ø–æ–¥ –∫–Ω–æ–ø–∫–æ–π —É–∂–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å–ª–æ–≤–æ "–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ"
			if (spamObj.parent && spamObj.parent.innerText.includes('–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ')) {
				console.log('–£–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º.');
				// –º–µ–Ω—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞ —Ç–µ–∫—Å—Ç, —á—Ç–æ–±—ã –Ω–∞ –Ω–µ–π –Ω–µ –∑–∞—Ü–∏–∫–ª–∏–≤–∞—Ç—å—Å—è
				spamObj.parent.lastChild.innerHTML = "–û—à–∏–±–∫–∞";
				spamObj.invites--;
			}
			// –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –ø—Ä–æ–≤–µ—Ä—è–µ–º, —Ç–∞ –ª–∏ –∫–Ω–æ–ø–∫–∞
			else if (a.innerText === spamObj.text) {
				a.scrollIntoView({ block: "center", behavior: "smooth" });
				spamObj.invites++;
				stat.innerHTML = (!mode ? "–í—ã—Å–ª–∞–Ω–æ: " : "–û—Ç–º–µ–Ω–µ–Ω–æ: ") + spamObj.invites + "\t–ù–∞–π–¥–µ–Ω–æ: " + spamObj.count;
				console.log('Invite sended to ' + spamObj.parent.innerText);
				a.after((!mode ? "–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (" : "–û—Ç–º–µ–Ω–µ–Ω–æ (") + spamObj.invites + ')');
				a.onclick();
			}
		} else {
			console.log('Undefined parent: ' + spamObj.rows[spamObj.i]);
		}
		spamObj.i++;
	} else {
		console.log('Waiting for resolve Captcha, slow down recursion');
		t += 100;
	}
	// –µ—Å–ª–∏ –Ω–∞–∂–∞–ª–∏ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –∫–Ω–æ–ø–∫—É, —Ç–æ —Å–∫—Ä–æ–ª–ª–∏–º –∏ –Ω–µ –≤—ã–∑—ã–≤–∞–µ–º –∫–ª–∏–∫ –µ—â–µ —Ä–∞–∑
	if (spamObj.rows.length > 0 && spamObj.i >= spamObj.rows.length) {
		console.log('Last button, i:' + spamObj.i + ' >= length:' + spamObj.rows.length);
		window.setTimeout(spamObj.scroll, Math.random() * 300 + 150);
		return;
	}
	// –µ—Å–ª–∏ –µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∞—è –∫–Ω–æ–ø–∫–∞, –∏–ª–∏ –º—ã –∑–∞—Ü–∏–∫–ª–∏–ª–∏—Å—å –Ω–∞ –∫–∞–ø—á–µ, –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –µ—â–µ —Ä–∞–∑
	if (spamObj.rows[spamObj.i]) {
		window.setTimeout(spamObj.click, Math.random() * 300 + t*10);
	}
};
spamObj.scroll = function () {
	//hbody = document.body.scrollHeight;
	if (!isOn) {
		return;
	}
	let t = timeout;
	console.log('start scroll(), hbody: ' + hbody + 
		', scrollHeigh: ' + document.body.scrollHeight + 
		', length: ' + spamObj.rows.length);

	spamObj.rows = document.querySelectorAll(selector);
	// –µ—Å–ª–∏ –Ω–µ—Ç –∫–Ω–æ–ø–æ–∫, —Å–∫—Ä–æ–ª–ª–∏–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
	if (spamObj.rows.length === 0) {
		hbody = document.body.scrollHeight;
		window.scrollTo({top: hbody, behavior: 'smooth'});
		// –≤ —ç—Ç–æ—Ç –º–æ–º–µ–Ω—Ç body.scrollHeight –µ—â–µ –Ω–µ –ø–æ–º–µ–Ω—è–ª—Å—è, –ø–æ—Ç–æ–º—É —á—Ç–æ js —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ 1 –ø–æ—Ç–æ–∫ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –≤—ã–∑–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏
		console.log('scroll to ' + document.body.scrollHeight);
		// –∏ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –∑–∞–ø—É—Å–∫–∞–µ–º –µ—â–µ —Ä–∞–∑
		window.setTimeout(spamObj.scroll, Math.random() * 300 + 150);
	} else {
		spamObj.count += spamObj.rows.length;
		spamObj.i = 0;
		console.log('Buttons found! New count: ' + spamObj.count);
		window.setTimeout(spamObj.click, Math.random() * 300 + t*10);
	}
};

vkl.className = 'flat_button button_wide';
vkl.innerHTML = "Start!";
vkl.onclick = function () {
	if (isOn == 0) {
		isOn = 1;
		vkl.innerHTML = "Stop!";
		spamObj.scroll();
		//spamObj.click();
	} else {
		vkl.innerHTML = "Start!";
		isOn = 0;
	}
};
document.getElementById('narrow_column').innerHTML += `
	<div id="spam-block" class="page_block" style="padding: 14px 16px">
		<div class="ui_search_fltr_sel" id="spam-mode">
			<div class="radiobtn on" role="radio" aria-checked="true">–í—ã—Å–ª–∞—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ</div>
			<div class="radiobtn" role="radio" aria-checked="false">–û—Ç–º–µ–Ω–∏—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ</div>
		</div>
		<div class="ui_search_fltr_sel">
			<input id="spam-timeout" class="step_slider" type="range" style="direction: rtl" min="1" max="100">
		</div>
	</div>`;
changeMode(null, 0);
changeTimeout(50);

document.getElementById('spam-block').append(vkl, stat);
document.getElementById('spam-timeout').addEventListener('change', function (e) {
	changeTimeout(Number(e.target.value));
});
let radios = document.getElementById('spam-mode').children;
for (let i = 0; i < radios.length; i++) {
	radios[i].addEventListener('click', function (e) { changeMode(e.target, i) });
}

// –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã—Ç–∏–µ–º/–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–æ–π –≤–∫–ª–∞–¥–∫–∏
window.addEventListener('beforeunload', function (evt) {
	evt = evt || window.event;
	evt.returnValue = false;
	console.log('Before unload window: stopped at ' + spamObj.invites);
}, false);